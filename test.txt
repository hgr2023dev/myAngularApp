import { Injectable } from '@angular/core';
import {
  HttpRequest,
  HttpHandler,
  HttpEvent,
  HttpInterceptor,
  HttpResponse,
  HttpErrorResponse,
} from '@angular/common/http';
import { Observable } from 'rxjs';
import { HandleErrorService } from '../services/error-handling/handle-error.service';
import { SpinnerInterceptor } from './spinner.interceptor';
import { NgxSpinnerService } from 'ngx-spinner';

@Injectable()
export class HandleErrorInterceptor implements HttpInterceptor {
  constructor(
    private error: HandleErrorService,
    private spinner: NgxSpinnerService
  ) {}

  public intercept(
    request: HttpRequest<any>,
    next: HttpHandler
  ): Observable<HttpEvent<any>> {
    return new Observable((observer) => {
      next.handle(request).subscribe(
        //success
        (res: HttpEvent<any>) => {
          if (res instanceof HttpResponse) {
            observer.next(res);
          } else if (res instanceof HttpErrorResponse) {
            this.error.handleError(res);
          }
        },
        (err: HttpErrorResponse) => {
          //Handling Errors
          this.spinner.hide();
          this.error.handleError(err);
        }
      );
    });
  }
}
